Creado por: Aussterben
Canal de Youtube: https://www.youtube.com/@aussterben.l
Créditos: Chatgpt, Aussterben

1. Comandos básicos de Bash

cd = change directory
ls = list
pwd = print working directory
whoami = quien soy
cat = leer archivos
cp = copy
mv = move
rm = remove
rmdir = remove directory
mkdir = make directory
touch = crear archivos

2. Permisos en linux
ls -l = ver permisos
chmod = cambiar permisos
chown = cambiar propiedad
chgrp = cambiar grupo
lsattr = ver permisos especiales
chattr = añadir permisos especiales

Vídeo explicando: https://www.youtube.com/watch?v=ydflwXSAxLI&ab_channel=aussterben

3. Redirecciones avanzadas
{comando} > /dev/null

4. Uso avanzado de tuberías
cat archivo.txt | grep "hola" # grep = filtrar por una palabra
cat archivo.txt | sort # ordena las líneas
cat archivo.txt | uniq # ordena por líneas únicas
cat archivo.txt | wc -l # Cuenta el número de líneas

5. Búsqueda de archivos y directorios
find /home/user -name "Archivo.txt"
find /home/user -name "*.txt" -exec cat {} \; # Hay muchas formas para buscar por el comando find.
locate archivo.txt
grep -r "patrón" /home/user

6. Expresiones regulares y patrones de búsqueda
grep "^[a-zA-Z0-9]" archivo.txt  # Encuentra líneas que comiencen con un número o letra

7. Subshells y variables en Bash
{comando1; comando2}  # Los comandos se ejecutan en un subshell

8. Procesos en segundo plano y control de trabajos
{comando} & # ejecutar un trabajo en segundo plano
jobs # ver el trabajo en segundo plano
fg %1  # El número depende de la salida del comando 'jobs'

9. SSH y transferencia de archivos
ssh usuario@servidor # SSH: Conectar a un servidor remoto.
ssh -p 2220 bandit.labs.overthewire.org # Para usar un puerto específico:
scp archivo.txt usuario@servidor:/ruta/destino # scp: Copia archivos entre sistemas locales y remotos.
sftp usuario@servidor # sftp: Cliente FTP seguro para transferencias de archivos.

10. Uso avanzado de "sed" y "awk"
# sed = stream editor
# Es ideal para manipulación de texto, como reemplazar palabras en archivos o filtrar contenido:
sed 's/palabra_antigua/nueva_palabra/g' archivo.txt
sed '/patrón/d' archivo.txt

# awk
# Es útil para trabajar con columnas de texto, analizar archivos y procesar datos de manera avanzada.
awk '{print $1}' archivo.txt # imprime la primera columna de un archivo.
awk '{suma += $3} END {print suma}' archivo.txt # Sumar los valores de la tercera columna

11. Tratar con archivos comprimidos
# Descomprimir archivos tar:

tar -xvf archivo.tar
tar -xzvf archivo.tar.gz

# Descomprimir archivos zip:

unzip archivo.zip

12. Procesamiento y manipulación de datos
cut -d ' ' -f1 archivo.txt # Aquí, -d especifica el delimitador (en este caso, un espacio), y -f1 indica que queremos el primer campo.
cut -d ':' -f1,3 archivo.txt  # Extrae la primera y tercera columna separadas por ":"

# tr: Traducir o eliminar caracteres
# El comando tr permite traducir o eliminar caracteres en una cadena o archivo
# de mayúsculas a minúsculas =

echo "hola mundo" | tr 'a-z' 'A-Z'
# Eliminar todos los dígitos de una cadena:
echo "abc123def456" | tr -d '0-9'

# sort y uniq: Estos comandos son muy útiles cuando necesitas ordenar líneas o eliminar duplicados de una lista.

sort archivo.txt # ordenar un archivo
sort archivo.txt | uniq # ordenar y eliminar líneas duplicadas
sort archivo.txt | uniq -c # contar el número de apariciones de cada línea única.

13. Comandos de red y networking
# nc (netcat) es una herramienta versátil para interactuar con puertos de red, enviar y recibir datos.

nc dominio.com 80 ## conectar a un servidor en un puerto específico:

## Enviar un archivo a través de la red:
nc -l -p 1234 < archivo.txt  ## En el servidor receptor
nc servidor.com 1234 > archivo.txt  ## En el cliente emisor

nc -l 1234 ## Escuchar en un puerto

# telnet
## Otra herramienta útil para conectarse a puertos y servicios remotos, aunque menos segura que SSH.

telnet dominio.com 80 ## conectar a un puerto en un servicio remoto

# Curl
## Se utiliza para realizar solicitudes HTTP y transferencias de datos a través de la web.

curl -O http://example.com/archivo.txt ## Descargar un archivo de una URL:
curl -X POST -d "param1=valor1&param2=valor2" http://example.com/formulario ## Enviar datos con una solicitud POST:
curl -u usuario:contraseña http://example.com ## Usar credenciales para autenticarte en una solicitud:

# wget
## También sirve para descargar archivos desde servidores remotos. (Personalmente el que uso yo)

wget http://example.com/archivo.txt ## Descargar un archivo
wget -r http://example.com ## Descargar un sitio web completo

14. Metacaracteres, comodines y expansión de globos
# Los metacaracteres y comodines son herramientas poderosas en Bash para trabajar con patrones de archivos y datos. Aquí algunos importantes:
# *: Representa cualquier número de caracteres (incluyendo ninguno)

ls *.txt  ## Lista todos los archivos con extensión .txt

# ?: Representa un solo carácter

ls archivo?.txt  ## Lista archivos como archivo1.txt, archivo2.txt, etc.

# [ ]: Representa un rango de caracteres

ls archivo[1-3].txt  # Lista archivo1.txt, archivo2.txt y archivo3.txt

15. Procesos y señales
# Cuando trabajas en Bash, es importante poder manejar procesos (jobs) y señales (signals) para controlar la ejecución de comandos.

ps aux  ## Lista todos los procesos en ejecución
kill -9 PID ## Matar un proceso por PID
kill -SIGTERM PID  # Enviar una señal específica (SIGTERM, SIGKILL, etc.)

16. Uso avanzado de SSH
# En Bandit por ejemplo, la conexión remota a través de SSH es vital. Puedes hacer varias cosas interesantes con SSH más allá de una simple conexión.
## Reenvío de puertos: Puedes redirigir puertos locales y remotos a través de una conexión SSH.

ssh -L 8080:localhost:80 usuario@servidor ## Reenviar un puerto local a uno remoto:
ssh -R 8080:localhost:80 usuario@servidor ## Reenviar un puerto remoto a uno local:
ssh usuario@servidor 'comando_a_ejecutar' ## Ejecutar comandos remotos: Puedes ejecutar comandos en un servidor remoto sin iniciar sesión interactiva:
scp archivo.txt usuario@servidor:/ruta/destino/ ## Copia remota de archivos: Con scp (secure copy) puedes copiar archivos entre servidores de manera segura:


17. Find avanzado
# Find = encontrar

find /ruta -name "archivo.txt" ## Buscar archivos por nombre
find /ruta -type f -name "*.txt" ## Buscar archivos por tipo (f para archivos, d para directorios):
find /ruta -mtime -7 ## Buscar archivos modificados en los últimos 7 días:
find /ruta -name "*.log" -exec rm {} \;  Ejecutar un comando sobre los archivos encontrados:

18. Técnicas de depuración en scripts de Bash
# Si empiezas a escribir scripts más complejos, es crucial saber cómo depurarlos.

bash -x script.sh ## Modo de depuración: Ejecutar un script en modo debug:
echo "El valor de la variable es: $mi_variable" ## Añadir mensajes de depuración manualmente: Usa echo para imprimir valores de variables o checkpoints durante la ejecución de un
script

set -e ## Detener la ejecución ante errores: Puedes hacer que un script se detenga si un comando falla usando set -e al principio del script

----------------------------------------------------
----------------------------------------------------
----------------------------------------------------


Como ejercicio final y muy fácil, os quiero poner que se descarguen este archivo y filtren por la palabra "Créditos". Es muy sencillito, suerte.
